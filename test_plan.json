{
  "metadata": {
    "generated_at": "2025-07-07T11:52:04.419167",
    "version": "2.0",
    "system": "MCCVA AI-Powered Load Balancing",
    "test_environment": "Cloud Production"
  },
  "executive_summary": {
    "total_test_scenarios": 14,
    "test_categories": [
      "ai_prediction_accuracy",
      "load_balancing",
      "retry_fallback",
      "complex_scenarios",
      "stress_testing"
    ],
    "estimated_execution_time": "4-6 hours",
    "success_criteria": {
      "ai_accuracy": "\u2265 80%",
      "load_balancing_cv": "< 0.5",
      "system_stability": "No crashes during stress tests",
      "fallback_success": "\u2265 95%"
    }
  },
  "test_categories": {
    "ai_prediction_accuracy": {
      "description": "Test \u0111\u1ed9 ch\u00ednh x\u00e1c AI prediction v\u1edbi c\u00e1c workload types",
      "target_metrics": {
        "accuracy": "\u2265 80%",
        "enhanced_accuracy": "\u2265 85%",
        "confidence": "\u2265 0.7"
      }
    },
    "load_balancing": {
      "description": "Test hi\u1ec7u qu\u1ea3 ph\u00e2n ph\u1ed1i t\u1ea3i across servers",
      "target_metrics": {
        "coefficient_variation": "< 0.3 (excellent), < 0.5 (good)",
        "server_utilization": "Evenly distributed",
        "response_time": "< 100ms average"
      }
    },
    "retry_fallback": {
      "description": "Test logic retry v\u00e0 fallback khi server fails",
      "target_metrics": {
        "fallback_success_rate": "\u2265 95%",
        "retry_attempts": "\u2264 3 attempts",
        "recovery_time": "< 500ms"
      }
    },
    "complex_scenarios": {
      "description": "Test v\u1edbi mixed workloads v\u00e0 edge cases",
      "target_metrics": {
        "mixed_workload_accuracy": "\u2265 75%",
        "edge_case_handling": "No crashes",
        "concurrent_requests": "Handle 100+ concurrent"
      }
    },
    "stress_testing": {
      "description": "Test d\u01b0\u1edbi high load conditions",
      "target_metrics": {
        "throughput": "\u2265 500 requests/second",
        "error_rate": "< 1%",
        "latency_p99": "< 1 second"
      }
    }
  },
  "core_scenarios": [
    {
      "id": "TS001",
      "name": "Web Server (Small Workload)",
      "category": "ai_prediction_accuracy",
      "input": {
        "cpu_cores": 2,
        "memory": 4,
        "storage": 50,
        "network_bandwidth": 500,
        "priority": 1,
        "task_complexity": 1,
        "data_size": 20,
        "io_intensity": 10,
        "parallel_degree": 100,
        "deadline_urgency": 1
      },
      "vm_features": [
        0.3,
        0.4,
        0.2
      ],
      "expected_outputs": {
        "makespan": "small",
        "target_servers": [
          1,
          2,
          3
        ],
        "confidence": "> 0.6"
      },
      "business_context": "Lightweight web applications, static content serving",
      "test_variations": [
        "Normal load",
        "Peak traffic",
        "Cache miss scenarios"
      ]
    },
    {
      "id": "TS002",
      "name": "Database Server (Medium Workload)",
      "category": "ai_prediction_accuracy",
      "input": {
        "cpu_cores": 4,
        "memory": 8,
        "storage": 100,
        "network_bandwidth": 1000,
        "priority": 3,
        "task_complexity": 2,
        "data_size": 50,
        "io_intensity": 25,
        "parallel_degree": 500,
        "deadline_urgency": 2
      },
      "vm_features": [
        0.6,
        0.7,
        0.5
      ],
      "expected_outputs": {
        "makespan": "medium",
        "target_servers": [
          3,
          4,
          5,
          6
        ],
        "confidence": "> 0.7"
      },
      "business_context": "OLTP databases, moderate query complexity",
      "test_variations": [
        "Read-heavy",
        "Write-heavy",
        "Mixed transactions"
      ]
    },
    {
      "id": "TS003",
      "name": "ML Training (Large Workload)",
      "category": "ai_prediction_accuracy",
      "input": {
        "cpu_cores": 12,
        "memory": 32,
        "storage": 500,
        "network_bandwidth": 5000,
        "priority": 5,
        "task_complexity": 4,
        "data_size": 200,
        "io_intensity": 75,
        "parallel_degree": 1500,
        "deadline_urgency": 4
      },
      "vm_features": [
        0.8,
        0.9,
        0.7
      ],
      "expected_outputs": {
        "makespan": "large",
        "target_servers": [
          5,
          6,
          7,
          8
        ],
        "confidence": "> 0.8"
      },
      "business_context": "Deep learning training, data processing pipelines",
      "test_variations": [
        "GPU-accelerated",
        "Distributed training",
        "Hyperparameter tuning"
      ]
    },
    {
      "id": "TS004",
      "name": "Video Rendering (Large Workload)",
      "category": "ai_prediction_accuracy",
      "input": {
        "cpu_cores": 16,
        "memory": 64,
        "storage": 800,
        "network_bandwidth": 8000,
        "priority": 4,
        "task_complexity": 5,
        "data_size": 500,
        "io_intensity": 90,
        "parallel_degree": 2000,
        "deadline_urgency": 5
      },
      "vm_features": [
        0.9,
        0.8,
        0.6
      ],
      "expected_outputs": {
        "makespan": "large",
        "target_servers": [
          5,
          6,
          7,
          8
        ],
        "confidence": "> 0.8"
      },
      "business_context": "Video processing, 3D rendering, media transcoding",
      "test_variations": [
        "4K rendering",
        "Real-time processing",
        "Batch processing"
      ]
    },
    {
      "id": "TS005",
      "name": "API Gateway (Small Workload)",
      "category": "ai_prediction_accuracy",
      "input": {
        "cpu_cores": 1,
        "memory": 2,
        "storage": 20,
        "network_bandwidth": 2000,
        "priority": 2,
        "task_complexity": 1,
        "data_size": 10,
        "io_intensity": 5,
        "parallel_degree": 100,
        "deadline_urgency": 1
      },
      "vm_features": [
        0.4,
        0.3,
        0.1
      ],
      "expected_outputs": {
        "makespan": "small",
        "target_servers": [
          1,
          2,
          3
        ],
        "confidence": "> 0.6"
      },
      "business_context": "API routing, request forwarding, lightweight processing",
      "test_variations": [
        "High frequency requests",
        "Authentication heavy",
        "Rate limiting"
      ]
    },
    {
      "id": "TS006",
      "name": "File Server (Medium Workload)",
      "category": "ai_prediction_accuracy",
      "input": {
        "cpu_cores": 6,
        "memory": 12,
        "storage": 200,
        "network_bandwidth": 1500,
        "priority": 3,
        "task_complexity": 3,
        "data_size": 100,
        "io_intensity": 50,
        "parallel_degree": 800,
        "deadline_urgency": 3
      },
      "vm_features": [
        0.5,
        0.6,
        0.8
      ],
      "expected_outputs": {
        "makespan": "medium",
        "target_servers": [
          3,
          4,
          5,
          6
        ],
        "confidence": "> 0.7"
      },
      "business_context": "File storage, backup operations, content distribution",
      "test_variations": [
        "Large file transfers",
        "Multiple concurrent users",
        "Backup operations"
      ]
    }
  ],
  "load_balancing_tests": [
    {
      "id": "LB001",
      "name": "Uniform Load Distribution",
      "category": "load_balancing",
      "description": "Test ph\u00e2n ph\u1ed1i \u0111\u1ec1u v\u1edbi identical requests",
      "test_config": {
        "total_requests": 100,
        "request_type": "medium_workload",
        "expected_cv": "< 0.3"
      }
    },
    {
      "id": "LB002",
      "name": "Mixed Workload Distribution",
      "category": "load_balancing",
      "description": "Test v\u1edbi mixed small/medium/large workloads",
      "test_config": {
        "total_requests": 150,
        "workload_mix": {
          "small": 50,
          "medium": 60,
          "large": 40
        },
        "expected_outcome": "Appropriate server allocation per workload type"
      }
    },
    {
      "id": "LB003",
      "name": "Server Failure Handling",
      "category": "retry_fallback",
      "description": "Test fallback khi primary server fails",
      "test_config": {
        "simulate_failures": [
          "server_3",
          "server_5"
        ],
        "expected_fallback_rate": "> 95%",
        "max_retry_attempts": 3
      }
    }
  ],
  "stress_tests": [
    {
      "id": "ST001",
      "name": "High Concurrency Test",
      "category": "stress_testing",
      "description": "Test v\u1edbi 100+ concurrent requests",
      "test_config": {
        "concurrent_users": 100,
        "requests_per_user": 10,
        "duration_seconds": 60,
        "target_metrics": {
          "throughput": "> 500 req/sec",
          "error_rate": "< 1%",
          "avg_response_time": "< 200ms"
        }
      }
    },
    {
      "id": "ST002",
      "name": "Resource Exhaustion Test",
      "category": "stress_testing",
      "description": "Test behavior khi approach resource limits",
      "test_config": {
        "scenario": "Gradual load increase",
        "monitoring": [
          "CPU usage",
          "Memory usage",
          "Response times"
        ],
        "expected_behavior": "Graceful degradation, no crashes"
      }
    }
  ],
  "complex_scenarios": [
    {
      "id": "CS001",
      "name": "Edge Case - Minimum Resources",
      "category": "complex_scenarios",
      "description": "Test v\u1edbi minimum possible resource requests",
      "input": {
        "cpu_cores": 0.5,
        "memory": 0.5,
        "storage": 1,
        "network_bandwidth": 1,
        "priority": 1
      },
      "expected_behavior": "Handle gracefully, route to smallest server"
    },
    {
      "id": "CS002",
      "name": "Edge Case - Maximum Resources",
      "category": "complex_scenarios",
      "description": "Test v\u1edbi maximum possible resource requests",
      "input": {
        "cpu_cores": 32,
        "memory": 128,
        "storage": 2000,
        "network_bandwidth": 10000,
        "priority": 5
      },
      "expected_behavior": "Route to highest capacity servers"
    },
    {
      "id": "CS003",
      "name": "Invalid Input Handling",
      "category": "complex_scenarios",
      "description": "Test v\u1edbi invalid/malformed inputs",
      "test_cases": [
        "Negative values",
        "String values for numeric fields",
        "Missing required fields",
        "Out-of-range values"
      ],
      "expected_behavior": "Return appropriate error messages, no crashes"
    }
  ],
  "automation_scripts": {
    "ai_accuracy": "python3 test_ai_routing.py",
    "load_balancing": "python3 test_load_balancing.py",
    "stress_testing": "python3 stress_test.py",
    "comprehensive": "python3 comprehensive_test_suite.py"
  },
  "reporting": {
    "real_time_metrics": [
      "AI prediction accuracy",
      "Server response times",
      "Error rates",
      "Load distribution"
    ],
    "daily_reports": [
      "System performance summary",
      "AI model accuracy trends",
      "Load balancing efficiency",
      "Error analysis"
    ]
  }
}